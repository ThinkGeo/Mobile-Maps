<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="ThinkGeo.UI.XamarinForms.HowDoI.ColorUtilitiesCloudServicesSample"
             Title="Color Utilities">
    <ContentPage.Content>
        <StackLayout>
            <Expander>
                <!-- Sample Description -->
                <Expander.Header>
                    <StackLayout Orientation="Horizontal" Padding="8">
                        <Label Text="Learn how to use the ColorCloudClient class to access the ColorUtilities APIs available from the ThinkGeo Cloud"
                               FontSize="Subtitle"
                               VerticalOptions="Center"
                               HorizontalOptions="StartAndExpand"/>
                        <BoxView Color="LightGray"
                                 WidthRequest="1"
                                 VerticalOptions="Center"
                                 HorizontalOptions="Center"/>
                        <Image Source="chevron_down.png" HeightRequest="44" VerticalOptions="Start" HorizontalOptions="End">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Source={RelativeSource AncestorType={x:Type Expander}}, Path=IsExpanded}"
                                             Value="True">
                                    <Setter Property="Rotation"
                                            Value="180"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                    </StackLayout>
                </Expander.Header>

                <!-- Sample Controls -->
                <Expander.Content>
                    <Grid Grid.Column="1" Grid.Row="0">
                        <Label Grid.Column="1" Grid.Row="0" Text="Generate and Apply a New Color Group"></Label>
                        <Label FontSize="14">Category:</Label>
                        <Picker Grid.Column="1" Grid.Row="1" x:Name="cboColorType" SelectedIndexChanged="cboColorType_SelectedIndexChanged">
                            <Picker.ItemsSource>
                                <x:Array Type="{x:Type x:String}">
                                    <x:String>Hue</x:String>
                                    <x:String>Triad</x:String>
                                    <x:String>Tetrad</x:String>
                                    <x:String>Quality</x:String>
                                    <x:String>Analogous</x:String>
                                    <x:String>Contrasting</x:String>
                                    <x:String>Complementary</x:String>
                                </x:Array>

                            </Picker.ItemsSource>
                        </Picker>
                        <Label Grid.Column="1" Grid.Row="2" x:Name="txtColorCategoryDescription" Text="Get a family of colors with the same hue and sequential variances in lightness and saturation"></Label>
                        <Label Grid.Column="1" Grid.Row="4">Base Color:</Label>
                        <RadioButton x:Name="rdoRandomColor" Grid.Column="1" Grid.Row="5" GroupName="SelectedColor" Text="Random Color"></RadioButton>
                        <RadioButton x:Name="rdoSpecificColor"  Text="Specific Color:" Grid.Column="1" Grid.Row="6"  GroupName="SelectedColor"></RadioButton>
                        <Entry x:Name="txtSpecificColor" Text="#AB2567" Grid.Column="1" Grid.Row="7" ></Entry>

                        <RadioButton x:Name="rdoDefaultColor" Grid.Column="1" Grid.Row="8"  Text="Default Color:" IsChecked="True" GroupName="SelectedColor"></RadioButton>
                        <Picker x:Name="cboDefaultColor" Grid.Column="1" Grid.Row="9" >
                            <Picker.ItemsSource>
                                <x:Array Type="{x:Type x:String}">
                                    <x:String>Red</x:String>
                                    <x:String>Orange</x:String>
                                    <x:String>Yellow</x:String>
                                    <x:String>Green</x:String>
                                    <x:String>Blue</x:String>
                                    <x:String>Purple</x:String>
                                </x:Array>
 
                            </Picker.ItemsSource>
                        </Picker>
                        <Button Grid.Column="1" Grid.Row="10" Text="Generate" VerticalOptions="Start"  Clicked="GenerateColors_Click"></Button>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="5" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </Expander.Content>
            </Expander>

            <!-- Map Control -->
            <Image x:Name="mapView" Source="frisco_sat_map.png" Aspect="AspectFill" VerticalOptions="FillAndExpand"/>

        </StackLayout>
    </ContentPage.Content>
</ContentPage>
